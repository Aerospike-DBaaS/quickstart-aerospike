AWSTemplateFormatVersion: 2010-09-09
Description: >-
  CodePipeline with CodeBuild workflow to run TaskCat test CloudFormation
  templates for quickstart-aerospike
Parameters:
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: Aerospike-DBaaS
  GitHubRepo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: quickstart-aerospike
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: main
  GitHubToken:
    NoEcho: true
    Type: String
    Default: '{{resolve:secretsmanager:github-token:SecretString}}'
    Description: >-
      GitHub Token. Must be defined in AWS Secrets Manager and here
      https://github.com/settings/tokens
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubToken
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
    ParameterLabels:
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubUser:
        default: GitHub User/Org Name
      GitHubRepo:
        default: GitHub Repository Name
      GitHubBranch:
        default: GitHub Branch Name
Resources:
  # ArtifactBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     AccessControl: Private
  #     LifecycleConfiguration:
  #       Rules:
  #         - NoncurrentVersionExpirationInDays: 30
  #           Status: Enabled
  #     VersioningConfiguration:
  #       Status: Enabled
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - 'logs:*'
                  - 'lambda:*'
                  - 'cloudwatch:*'
                  - 'codebuild:*'
                  - 's3:*'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 's3:PutObject'
                Resource:
                  - 'arn:aws:s3:::codepipeline*'
                Effect: Allow
              - Action:
                  - 'logs:*'
                  - 'lambda:*'
                  - 'cloudwatch:*'
                  - 'codebuild:*'
                  - 's3:*'
                  - 'ec2:*'
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
            Version: 2012-10-17
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Action:
                  - 'apigateway:*'
                  - 'cloudformation:*'
                  - 'cloudwatch:*'
                  - 'cloudtrail:*'
                  - 'codebuild:*'
                  - 'codecommit:*'
                  - 'codepipeline:*'
                  - 'config:*'
                  - 'dynamodb:*'
                  - 'ec2:*'
                  - 'iam:*'
                  - 'kms:*'
                  - 'lambda:*'
                  - 'logs:*'
                  - 'redshift:*'
                  - 'rds:*'
                  - 'secretsmanager:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'sqs:*'
                Effect: Allow
                Resource: '*'
            Version: 2012-10-17
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    DependsOn: CodeBuildRole
    Properties:
      Description: Setup Test Files. For example uploading to S3
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:4.0'
        EnvironmentVariables:
          - Name: GITHUB_REPO
            Value: !Ref GitHubRepo
          - Name: GITHUB_USER
            Value: !Ref GitHubUser
          - Name: GITHUB_BRANCH
            Value: !Ref GitHubBranch
          - Name: GITHUB_TOKEN
            Value: !Ref GitHubToken
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        GitCloneDepth: 1
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.x
              commands:
                - echo install phase started on `date`
                - python --version
                - 'curl -O https://bootstrap.pypa.io/get-pip.py'
                - python3 get-pip.py
                - pip install --upgrade pip
                - pip3 -q install cfn-lint pre-commit taskcat yq
                - pip3 install --upgrade taskcat
            pre_build:
              commands:
                - echo "Entered the pre_build phase  on `date` "
                - echo "Current directory is $CODEBUILD_SRC_DIR"
                - echo "Temporarily adding git credential store..."
                - echo "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" > ~/.git-credentials
                - git config --global credential.helper store
                - git config --global url."https://github.com/".insteadOf "git@github.com:"
                - git init
                - git remote add origin https://github.com/$GITHUB_USER/$GITHUB_REPO.git
                - git fetch
                - git checkout --force --track origin/$GITHUB_BRANCH
                - git submodule init
                - git submodule update --init --recursive
            build:
              commands:
                - echo Build phase started on `date`
                - git submodule update --init --recursive
                - taskcat test run -n -k -t aerospike-single-region
          artifacts:
            files:
              - '**/*'
  PipelineBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: Source
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: Source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts: []
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 2
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
Outputs:
  PipelineUrl:
    Value: !Sub >-
      https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
